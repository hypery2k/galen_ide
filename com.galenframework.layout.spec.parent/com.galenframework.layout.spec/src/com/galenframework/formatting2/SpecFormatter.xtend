/*
 * generated by Xtext 2.9.0
 */
package com.galenframework.formatting2

import com.galenframework.services.SpecGrammarAccess
import com.galenframework.spec.Element
import com.galenframework.spec.Import
import com.galenframework.spec.Model
import com.galenframework.spec.Objects
import com.galenframework.spec.Section
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class SpecFormatter extends AbstractFormatter2 {
	
	@Inject extension SpecGrammarAccess

	def dispatch void format(Model model, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		model.getObjects.format;
		for (Import importSection : model.getImportSection()) {
			importSection.format;
		}
		for (Section layoutCheckSection : model.getLayoutCheckSection()) {
			layoutCheckSection.format;
		}
	}

	def dispatch void format(Objects objects, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Element elements : objects.getElements()) {
			elements.format;
		}
	}
	
	// TODO: implement for Section, TaggedSection, LayoutRule, Element
}
