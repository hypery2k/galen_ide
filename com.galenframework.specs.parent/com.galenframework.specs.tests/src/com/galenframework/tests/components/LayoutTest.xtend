/*
 * generated by Xtext 2.9.2
 */
package com.galenframework.tests.components

import com.galenframework.tests.SpecsInjectorProvider
import com.galenframework.specs.Model
import com.google.inject.Inject
import org.eclipse.xtext.junit4.InjectWith
import org.eclipse.xtext.junit4.XtextRunner
import org.eclipse.xtext.junit4.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith

@RunWith(XtextRunner)
@InjectWith(SpecsInjectorProvider)
class LayoutTest{

	@Inject
	ParseHelper<Model> parseHelper;


	@Test
	def void shouldParseLayoutRuleTitleSimple() {
		val result = parseHelper.parse('''
			= Main =
				bootstrap-logo:
				    visible
		''')
		Assert.assertNotNull(result)
		Assert.assertNotNull(result.layoutCheckSection)
		val layoutSections = result.layoutCheckSection
		Assert.assertEquals(1,layoutSections.size)
		Assert.assertEquals("= Main =",layoutSections.get(0).name)


	}@Test
	def void shouldParseLayoutRuleTitleSimpleWhitespace() {
		val result = parseHelper.parse('''
			= Main section =
				bootstrap-logo:
				    visible
		''')
		Assert.assertNotNull(result)
		Assert.assertNotNull(result.layoutCheckSection)
		val layoutSections = result.layoutCheckSection
		Assert.assertEquals(1,layoutSections.size)
		Assert.assertEquals("= Main section =",layoutSections.get(0).name)	


	}

}
