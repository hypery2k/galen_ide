grammar com.galenframework.Specs with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate specs "http://www.galenframework.com/Specs"

Model:
	{Model}
	objects=Objects?
	imports+=Import*
	groups=Groups?
	imports+=Import*
	layoutChecks+=LayoutCheck*;

Objects:
	'@objects'
	BEGIN
	(elements+=Element)+
	END;
	
Groups:
	'@groups'
	BEGIN
	(groupEntries+=GroupEntry)+
	END;

Import:
	'@import' fileName=ID;

LayoutCheck:
	name=SECTION_LABEL
	BEGIN
	(generalRules+=LayoutRule)*
	(taggedRules+=TaggedRule)*
	END;

LayoutRule:
	applyTo=[Element|STRING] ':'
	BEGIN
	(references+=SpecsReference)+
	END;

TaggedRule:
	name=SECTION_TAG
	BEGIN
	rule=LayoutRule
	END;

SpecsReference:
	{SpecsReference} rule=Rule;

Rule:
	(VisibilityRule | PlacementRule | AlignmentRule | SizeRule);

VisibilityRule:
	{VisibilityRule} name=('visible' | 'absent');

PlacementRule:
	{PlacementRule} name=('near' | 'below' | 'above') INT 'to' INT 'px';

SizeRule:
	{SizeRule} ((name='height' ('<' | '>') (INT 'px' | 'screen/height')) |
	(name='width' ('<' | '>') (INT 'px' | 'screen/width@')));

AlignmentRule:
	name='aligned' type=AlignmentType
	ref=[Element] (INT 'px')?;

AlignmentType:
	('horizontally' ('all' | 'top' | 'bottom' | 'centered')) | ('vertically' ('all' | 'left' | 'bottom' | 'right'));

GroupEntry returns GroupEntry:
	{GroupEntry}
	name=ID consistsOf+=[Element] (','consistsOf+=[Element])*
;

Element returns Element:
	{Element}
	name=ID selector=Selector
	(BEGIN
	(children+=Element)+
	END)?;

Selector:
	(IdSelector | CssSelector | XpathSelector);

IdSelector:
	'id' value=IdSelectorValue;

IdSelectorValue returns ecore::EString:
	ID | INT;

CssSelector:
	('css')? value=CssSelectorValue;

CssSelectorValue returns ecore::EString:
	(CSSSELECTOR_VALUE | HTMLTAG_VALUE) (('>' | ',' | ':')? CSSSELECTOR_VALUE | HTMLTAG_VALUE)*;

XpathSelector:
	'xpath' value=XpathSelectorValue;

XpathSelectorValue returns ecore::EString:
	XPATH_VALUE;

terminal SECTION_TAG returns ecore::EString:
	'@on' TEXT_VALUE;

terminal SECTION_LABEL returns ecore::EString:
	'=' TEXT_VALUE '=';

terminal HTMLTAG_VALUE returns ecore::EString:
//PREFIXABLE_ID_START+
	('body' | 'br' | 'li' | 'a' | 'div' | 'span') (CSSSELECTOR_VALUE)?;

terminal CSSSELECTOR_VALUE returns ecore::EString:
	('#' | '.' | ':') PREFIXABLE_ID_START ('a'..'z' | 'A'..'Z' | '_' | '-' | INT)+;

terminal XPATH_VALUE returns ecore::EString:
	'//' ('*' | ID) ('['->']')*;
	// Single line comment
terminal SL_COMMENT:
	'#' WS !('\n' | '\r')* NEW_LINE?;

terminal ID returns ecore::EString:
	PREFIXABLE_ID_START ('a'..'z' | 'A'..'Z' | '-' | '*' | '.' | INT)+;

terminal fragment PREFIXABLE_ID_START:
	('a'..'z' | 'A'..'Z');

terminal fragment NEW_LINE:
	('\r'? '\n');

terminal fragment TEXT_VALUE:
	('a'..'z' | 'A'..'Z' | ' ') ('a'..'z' | 'A'..'Z' | ' ' | '.' | INT)*;
	// The following synthetic tokens are used for the indentation-aware blocks
terminal BEGIN:
	'synthetic:BEGIN'; // increase indentation
terminal END:
	'synthetic:END'; // decrease indentation