grammar com.galenframework.Specs with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate specs "http://www.galenframework.com/Specs"

Model:
	{Model}
	objects=Objects?
	importSection+=Import*
	layoutCheckSection+=Section*;

Objects:
	'@objects'
	BEGIN
	(elements+=Element)+
	END;

Import:
	IMPORT_DEFINITION;

Section:
	name=SECTION_LABEL
	BEGIN
	sectonRules=SectonRules
	END;

SectonRules:
	{SectonRules}
	rules+=(TaggedRule | LayoutRule)+;

LayoutRule:
	(ref=[Element] ':'
	BEGIN
	(references+=SpecsReference)+
	(sections+=Section)*
	END);

TaggedRule:
	name=SECTION_TAG
	BEGIN
	rule=LayoutRule
	END;

SpecsReference:
	(SimpleSpecsReference | ComplexSpecsReference);

SimpleSpecsReference:
	value=('visible' | 'absent');

ComplexSpecsReference:
	{ComplexSpecsReference} ((('near' | 'below' | 'above') INT 'to' INT 'px') |
	('aligned horizontally' ('all' | 'top' | 'bottom' | 'centered') (ref=[Element])? (INT 'px')?) |
	('aligned vertically' ('all' | 'left' | 'bottom' | 'right') (ref=[Element])? (INT 'px')?) |
	('height' ('<' | '>') (INT 'px' | 'screen/height')) |
	('width' ('<' | '>') (INT 'px' | 'screen/width@')));

Element returns Element:
	{Element}
	name=ID selector=Selector
	(BEGIN
	(children+=Element)+
	END)?;

Selector:
	(IdSelector | CssSelector | XpathSelector);

IdSelector:
	'id' value=IdSelectorValue;

IdSelectorValue returns ecore::EString:
	ID | INT;

CssSelector:
	('css')? value=CssSelectorValue;

CssSelectorValue returns ecore::EString:
	(CSSSELECTOR_VALUE | HTMLTAG_VALUE) (('>' | ',' | ':')? CSSSELECTOR_VALUE | HTMLTAG_VALUE)*;

XpathSelector:
	'xpath' value=XpathSelectorValue;

XpathSelectorValue returns ecore::EString:
	XPATH_VALUE;

terminal SECTION_TAG returns ecore::EString:
	'@on' TEXT_VALUE ;

terminal SECTION_LABEL returns ecore::EString:
	'=' TEXT_VALUE '=';

terminal IMPORT_DEFINITION:
	'@import' TEXT_VALUE;

terminal HTMLTAG_VALUE returns ecore::EString:
//PREFIXABLE_ID_START+
	('body' | 'br' | 'li' | 'a' | 'div' | 'span') (CSSSELECTOR_VALUE)?;

terminal CSSSELECTOR_VALUE returns ecore::EString:
	('#' | '.' | ':') PREFIXABLE_ID_START ('a'..'z' | 'A'..'Z' | '_' | '-' | INT)+;

terminal XPATH_VALUE returns ecore::EString:
	'//' ('*' | ID) ('['->']')*;
	// Single line comment
terminal SL_COMMENT:
	'#' WS !('\n' | '\r')* NEW_LINE?;

terminal ID returns ecore::EString:
	PREFIXABLE_ID_START ('a'..'z' | 'A'..'Z' | '-' | '*' | INT)+;

terminal fragment PREFIXABLE_ID_START:
	('a'..'z' | 'A'..'Z');

terminal fragment NEW_LINE:
	('\r'? '\n');

terminal fragment TEXT_VALUE:
	('a'..'z' | 'A'..'Z' | ' ') ('a'..'z' | 'A'..'Z' | ' ' | '.' | INT)*;
	// The following synthetic tokens are used for the indentation-aware blocks
terminal BEGIN:
	'synthetic:BEGIN'; // increase indentation
terminal END:
	'synthetic:END'; // decrease indentation